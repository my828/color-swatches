{"version":3,"sources":["img/logo-symbol.svg","components/Card.js","components/CardList.js","constants/colors.js","components/Navbar.js","components/Button.js","components/CardDetail.js","components/Pagination.js","components/Sidebar.js","colors.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","color","selectColor","style","styles","cardContainer","border","borderColor","borderRadius","boxShadow","margin","colorContainer","backgroundColor","value","height","textContainer","display","alignItems","className","onClick","toLowerCase","CardList","colors","currentPage","width","map","key","navbar","Colors","logo","Navbar","href","src","Logo","alt","Button","text","action","padding","fontWeight","CardDetail","clear","arrColor","selectedColor","detailCardClick","marginRight","textAlign","window","innerWidth","fontSize","justifyContent","console","log","Pagination","cardsPerPage","totalCards","paginate","useState","activePage","setActivePage","pageNumbers","i","Math","ceil","push","listStyle","number","borderBottom","handleClick","Sidebar","randomColors","generateRandom","container","outerHeight","content","paddingTop","marginLeft","marginTop","ColorCodes","RANDOM_COLORS","shadeColor","percent","R","parseInt","substring","G","B","toString","length","makeArrColor","obj","App","setCurrentPage","setSelectedColor","indexOfLastCard","indexOfFirstCard","currentCards","slice","listView","setListView","setArrColor","randomColor","floor","random","find","name","pageNumber","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfcef5d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-symbol.358d785a.svg\";","import React from \"react\";\nimport PropType from \"prop-types\";\n\nconst Card = ({ color , selectColor, style }) => {\n  const styles = {\n    cardContainer: {\n      border: `1px solid ${style.borderColor}`,\n      borderRadius: \"10px\",\n      boxShadow: \"0 0 3px rgba(0, 0, 0, .3)\",\n      margin: \"0 0 20px 0\" \n    },\n    colorContainer: {\n      backgroundColor: color.value,\n      height: \"80%\",\n      borderRadius: \"10px 10px 0 0\"\n    },\n    textContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"20%\"\n    }\n  };\n  return (\n    <div\n      className=\"card-container\"\n      style={{ ...style, ...styles.cardContainer }}\n      onClick={() => selectColor(color)}\n    >\n      <div style={styles.colorContainer} />\n      <div className=\"p-2 ml-2\" style={styles.textContainer}>\n        {color.value.toLowerCase()}\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  color: PropType.object.isRequired\n};\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport PropTypes from \"prop-types\";\n\nconst CardList = ({ colors, selectColor, currentPage }) => {\n  const styles = {\n    cardList: {\n      width: \"100%\"\n    }\n  };\n  return (\n    <div className=\"card-deck row row-cols-4\" style={styles.cardList}>\n      {colors.map(color => (\n        <div key={color.value} className=\"col mb-4\">\n          <Card\n            color={color}\n            selectColor={selectColor}\n            currentPage={currentPage}\n            style={{ width: \"90%\", height: 240, borderColor: \"white\" }}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nCardList.propTypes = {\n  colors: PropTypes.array.isRequired\n};\nexport default CardList;\n","export default {\n  base: \"#373B3C\",\n  sidebar: \"#D6D8D7\",\n};","import React from 'react'\nimport Logo from '../img/logo-symbol.svg'\nimport Colors from '../constants/colors'\n\nconst Navbar = () => {\n    return (\n        <nav style={styles.navbar}>\n            <a className=\"ml-3\" href=\"httpw://my828.github.io/helpfulhuman-challenge\">\n                <img src={Logo} alt=\"logo\" width=\"40\" height=\"40\" style={styles.logo}/>\n            </a>\n        </nav>\n    )\n}\n\nconst styles = {\n    navbar: {\n        backgroundColor: Colors.base\n    },\n    logo: {\n        margin: 15\n    }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport Colors from '../constants/colors';\n\nconst Button = ({ text, action }) => {\n    const styles = {\n        padding: \"10px 0px\",\n        width: \"200px\",\n        border: \"1px solid\",\n        borderRadius: \"10px\",\n        fontWeight: \"bold\",\n        color: Colors.base\n    }\n  return <button onClick={() => action()} style={styles}>{text}</button>;\n};\n\nexport default Button;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport Button from \"./Button\";\n\nconst CardDetail = ({ clear, arrColor, selectedColor, detailCardClick }) => {\n  // let [currentColor, setCurrentColor] = useState(arrColor[2]);\n  // useEffect(() => {\n  //   setCurrentColor(arrColor[2])\n  // })\n  const styles = {\n    cardDetail: {\n      marginRight: \"20px\",\n      textAlign: \"center\"\n    }\n  };\n\n  // const changeColor = color => {\n  //   setCurrentColor(color);\n  // };\n  return (\n    <div style={styles.cardDetail}>\n      <Card\n        selectColor={detailCardClick}\n        color={selectedColor}\n        style={{\n          width: window.innerWidth * 0.7,\n          height: 440,\n          borderColor: \"black\",\n          fontSize: \"25px\"\n        }}\n      />\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        {console.log(arrColor)}\n\n        {arrColor.map(color => (\n          <>\n            <Card\n              key={color.value}\n              selectColor={detailCardClick}\n              color={color}\n              style={{\n                width: \"17%\",\n                height: 150,\n                borderColor: \"white\",\n                fontSize: \"15px\"\n              }}\n            />\n          </>\n        ))}\n      </div>\n      <Button text=\"Clear\" action={clear} />\n    </div>\n  );\n};\n\nexport default CardDetail;\n","import React, { useState } from \"react\";\n\nconst Pagination = ({ cardsPerPage, totalCards, paginate }) => {\n  const [activePage, setActivePage] = useState(1);\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalCards / cardsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const styles = {\n    list: {\n      display: \"flex\",\n      listStyle: \"none\",\n      justifyContent: \"space-around\",\n      width: \"50%\",\n    }\n  };\n  let handleClick = number => {\n    setActivePage(number);\n    paginate(number);\n  };\n  return (\n    <nav>\n      <ul className=\"mx-auto\" style={styles.list}>\n        {pageNumbers.map(number => (\n          <li\n            key={number}\n            style={\n              activePage === number\n                ? {\n                    borderBottom: \"1.5px solid\",\n                    fontWeight: \"bold\",\n                    width: \"20px\",\n                    textAlign: \"center\"\n                  }\n                : {}\n            }\n          >\n            <a onClick={() => handleClick(number)}>{number}</a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport color from \"../constants/colors\";\nimport Button from \"./Button\";\n\nconst Sidebar = ({ randomColors, generateRandom }) => {\n  const styles = {\n    container: {\n      width: \"25%\",\n      backgroundColor: color.sidebar,\n      height: window.outerHeight,\n      textAlign: \"center\"\n    },\n    content: {\n      paddingTop: \"60px\",\n    }\n  };\n  return (\n    <div style={styles.container}>\n      <div style={styles.content}>\n        <Button text=\"Random Color\" action={generateRandom} />\n        <div style={{marginLeft: \"15%\", textAlign: \"left\"}}>\n          {randomColors.map(color => (\n            <div key={color} style={{marginTop: \"20px\", fontSize: \"20px\"}}>{color}</div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","const ColorCodes = [{\"name\":\"aqua\",\"value\":\"#00ffff\"},{\"name\":\"aquamarine\",\"value\":\"#7fffd4\"},{\"name\":\"bisque\",\"value\":\"#ffe4c4\"},{\"name\":\"blue\",\"value\":\"#0000ff\"},{\"name\":\"blueviolet\",\"value\":\"#8a2be2\"},{\"name\":\"brown\",\"value\":\"#a52a2a\"},{\"name\":\"burlywood\",\"value\":\"#deb887\"},{\"name\":\"cadetblue\",\"value\":\"#5f9ea0\"},{\"name\":\"chartreuse\",\"value\":\"#7fff00\"},{\"name\":\"chocolate\",\"value\":\"#d2691e\"},{\"name\":\"coral\",\"value\":\"#ff7f50\"},{\"name\":\"cornflowerblue\",\"value\":\"#6495ed\"},{\"name\":\"crimson\",\"value\":\"#dc143c\"},{\"name\":\"darkblue\",\"value\":\"#00008b\"},{\"name\":\"darkcyan\",\"value\":\"#008b8b\"},{\"name\":\"darkgoldenrod\",\"value\":\"#b8860b\"},{\"name\":\"darkgray\",\"value\":\"#a9a9a9\"},{\"name\":\"darkgreen\",\"value\":\"#006400\"},{\"name\":\"darkkhaki\",\"value\":\"#bdb76b\"},{\"name\":\"darkmagenta\",\"value\":\"#8b008b\"},{\"name\":\"darkolivegreen\",\"value\":\"#556b2f\"},{\"name\":\"darkorange\",\"value\":\"#ff8c00\"},{\"name\":\"darkorchid\",\"value\":\"#9932cc\"},{\"name\":\"darkred\",\"value\":\"#8b0000\"},{\"name\":\"darksalmon\",\"value\":\"#e9967a\"},{\"name\":\"darkseagreen\",\"value\":\"#8fbc8f\"},{\"name\":\"darkslateblue\",\"value\":\"#483d8b\"},{\"name\":\"darkslategray\",\"value\":\"#2f4f4f\"},{\"name\":\"darkturquoise\",\"value\":\"#00ced1\"},{\"name\":\"darkviolet\",\"value\":\"#9400d3\"},{\"name\":\"deeppink\",\"value\":\"#ff1493\"},{\"name\":\"deepskyblue\",\"value\":\"#00bfff\"},{\"name\":\"dimgray\",\"value\":\"#696969\"},{\"name\":\"dodgerblue\",\"value\":\"#1e90ff\"},{\"name\":\"firebrick\",\"value\":\"#b22222\"},{\"name\":\"forestgreen\",\"value\":\"#228b22\"},{\"name\":\"fuchsia\",\"value\":\"#ff00ff\"},{\"name\":\"goldenrod\",\"value\":\"#daa520\"},{\"name\":\"gold\",\"value\":\"#ffd700\"},{\"name\":\"gray\",\"value\":\"#808080\"},{\"name\":\"green\",\"value\":\"#008000\"},{\"name\":\"greenyellow\",\"value\":\"#adff2f\"},{\"name\":\"hotpink\",\"value\":\"#ff69b4\"},{\"name\":\"indianred\",\"value\":\"#cd5c5c\"},{\"name\":\"indigo\",\"value\":\"#4b0082\"},{\"name\":\"khaki\",\"value\":\"#f0e68c\"},{\"name\":\"lavenderblush\",\"value\":\"#fff0f5\"},{\"name\":\"lavender\",\"value\":\"#e6e6fa\"},{\"name\":\"lawngreen\",\"value\":\"#7cfc00\"},{\"name\":\"lemonchiffon\",\"value\":\"#fffacd\"},{\"name\":\"lightblue\",\"value\":\"#add8e6\"},{\"name\":\"lightcoral\",\"value\":\"#f08080\"},{\"name\":\"lightcyan\",\"value\":\"#e0ffff\"},{\"name\":\"lightgoldenrodyellow\",\"value\":\"#fafad2\"},{\"name\":\"lightgray\",\"value\":\"#d3d3d3\"},{\"name\":\"lightgreen\",\"value\":\"#90ee90\"},{\"name\":\"lightpink\",\"value\":\"#ffb6c1\"},{\"name\":\"lightsalmon\",\"value\":\"#ffa07a\"},{\"name\":\"lightseagreen\",\"value\":\"#20b2aa\"},{\"name\":\"lightskyblue\",\"value\":\"#87cefa\"},{\"name\":\"lightslategray\",\"value\":\"#778899\"},{\"name\":\"lightsteelblue\",\"value\":\"#b0c4de\"},{\"name\":\"lightyellow\",\"value\":\"#ffffe0\"},{\"name\":\"lime\",\"value\":\"#00ff00\"},{\"name\":\"limegreen\",\"value\":\"#32cd32\"},{\"name\":\"linen\",\"value\":\"#faf0e6\"},{\"name\":\"maroon\",\"value\":\"#800000\"},{\"name\":\"mediumaquamarine\",\"value\":\"#66cdaa\"},{\"name\":\"mediumblue\",\"value\":\"#0000cd\"},{\"name\":\"mediumorchid\",\"value\":\"#ba55d3\"},{\"name\":\"mediumpurple\",\"value\":\"#9370db\"},{\"name\":\"mediumseagreen\",\"value\":\"#3cb371\"},{\"name\":\"mediumslateblue\",\"value\":\"#7b68ee\"},{\"name\":\"mediumspringgreen\",\"value\":\"#00fa9a\"},{\"name\":\"mediumturquoise\",\"value\":\"#48d1cc\"},{\"name\":\"mediumvioletred\",\"value\":\"#c71585\"},{\"name\":\"midnightblue\",\"value\":\"#191970\"},{\"name\":\"mintcream\",\"value\":\"#f5fffa\"},{\"name\":\"mistyrose\",\"value\":\"#ffe4e1\"},{\"name\":\"moccasin\",\"value\":\"#ffe4b5\"},{\"name\":\"navajowhite\",\"value\":\"#ffdead\"},{\"name\":\"navy\",\"value\":\"#000080\"},{\"name\":\"oldlace\",\"value\":\"#fdf5e6\"},{\"name\":\"olive\",\"value\":\"#808000\"},{\"name\":\"olivedrab\",\"value\":\"#6b8e23\"},{\"name\":\"orange\",\"value\":\"#ffa500\"},{\"name\":\"orangered\",\"value\":\"#ff4500\"},{\"name\":\"orchid\",\"value\":\"#da70d6\"},{\"name\":\"palegoldenrod\",\"value\":\"#eee8aa\"},{\"name\":\"palegreen\",\"value\":\"#98fb98\"},{\"name\":\"paleturquoise\",\"value\":\"#afeeee\"},{\"name\":\"palevioletred\",\"value\":\"#db7093\"},{\"name\":\"peachpuff\",\"value\":\"#ffdab9\"},{\"name\":\"peru\",\"value\":\"#cd853f\"},{\"name\":\"pink\",\"value\":\"#ffc0cb\"},{\"name\":\"plum\",\"value\":\"#dda0dd\"},{\"name\":\"powderblue\",\"value\":\"#b0e0e6\"},{\"name\":\"purple\",\"value\":\"#800080\"},{\"name\":\"rebeccapurple\",\"value\":\"#663399\"},{\"name\":\"red\",\"value\":\"#ff0000\"},{\"name\":\"rosybrown\",\"value\":\"#bc8f8f\"},{\"name\":\"royalblue\",\"value\":\"#4169e1\"},{\"name\":\"saddlebrown\",\"value\":\"#8b4513\"},{\"name\":\"salmon\",\"value\":\"#fa8072\"},{\"name\":\"sandybrown\",\"value\":\"#f4a460\"},{\"name\":\"seagreen\",\"value\":\"#2e8b57\"},{\"name\":\"seashell\",\"value\":\"#fff5ee\"},{\"name\":\"sienna\",\"value\":\"#a0522d\"},{\"name\":\"silver\",\"value\":\"#c0c0c0\"},{\"name\":\"skyblue\",\"value\":\"#87ceeb\"},{\"name\":\"slateblue\",\"value\":\"#6a5acd\"},{\"name\":\"slategray\",\"value\":\"#708090\"},{\"name\":\"snow\",\"value\":\"#fffafa\"},{\"name\":\"springgreen\",\"value\":\"#00ff7f\"},{\"name\":\"steelblue\",\"value\":\"#4682b4\"},{\"name\":\"tan\",\"value\":\"#d2b48c\"},{\"name\":\"teal\",\"value\":\"#008080\"},{\"name\":\"thistle\",\"value\":\"#d8bfd8\"},{\"name\":\"tomato\",\"value\":\"#ff6347\"},{\"name\":\"turquoise\",\"value\":\"#40e0d0\"},{\"name\":\"violet\",\"value\":\"#ee82ee\"},{\"name\":\"wheat\",\"value\":\"#f5deb3\"},{\"name\":\"whitesmoke\",\"value\":\"#f5f5f5\"},{\"name\":\"yellow\",\"value\":\"#ffff00\"},{\"name\":\"yellowgreen\",\"value\":\"#9acd32\"}]\nconst RANDOM_COLORS = [\"Red\", \"Orange\", \"Yellow\", \"Blue\", \"Purple\", \"Brown\", \"Gray\"]\nexport { ColorCodes, RANDOM_COLORS}","import React, { useState } from \"react\";\nimport {\n  Navbar,\n  CardList,\n  Sidebar,\n  Pagination,\n  CardDetail\n} from \"./components\";\n\nimport { ColorCodes, RANDOM_COLORS } from \"./colors\";\n\nfunction shadeColor(color, percent) {\n  var R = parseInt(color.substring(1, 3), 16);\n  var G = parseInt(color.substring(3, 5), 16);\n  var B = parseInt(color.substring(5, 7), 16);\n\n  R = parseInt((R * (100 + percent)) / 100);\n  G = parseInt((G * (100 + percent)) / 100);\n  B = parseInt((B * (100 + percent)) / 100);\n\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  var RR = R.toString(16).length === 1 ? \"0\" + R.toString(16) : R.toString(16);\n  var GG = G.toString(16).length === 1 ? \"0\" + G.toString(16) : G.toString(16);\n  var BB = B.toString(16).length === 1 ? \"0\" + B.toString(16) : B.toString(16);\n\n  return \"#\" + RR + GG + BB;\n}\n\nfunction makeArrColor(selectedColor) {\n  let arrColor = [];\n  for (let i = -40; i <= 40; i += 20) {\n    let obj = {};\n    obj[\"value\"] = shadeColor(selectedColor.value, i);\n    arrColor.push(obj);\n  }\n  return arrColor;\n}\n\nfunction App() {\n  // calculates currentCards based on currentPage and cardsPerPage\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(12);\n  const [selectedColor, setSelectedColor] = useState(\"\");\n\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentCards = ColorCodes.slice(indexOfFirstCard, indexOfLastCard);\n\n  // toggle between list and detail views\n  const [listView, setListView] = useState(true);\n\n  const [arrColor, setArrColor] = useState([]);\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  const handleCardClick = color => {\n    // generate array of color based on selected color\n    setSelectedColor(color);\n    setArrColor(makeArrColor(color));\n    setListView(false);\n  };\n  const handleDetailCardClick = color => {\n    setSelectedColor(color);\n  }\n  const handleClear = () => {\n    setCurrentPage(1);\n    setListView(true);\n  };\n\n  const generateRandom = () => {\n    let randomColor =\n      RANDOM_COLORS[Math.floor(Math.random() * RANDOM_COLORS.length)];\n    let value = ColorCodes.find(\n      color => color.name === randomColor.toLowerCase()\n    );\n    setArrColor(makeArrColor(value));\n    setSelectedColor(value);\n    setListView(false);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div style={{ display: \"flex\" }}>\n        <Sidebar randomColors={RANDOM_COLORS} generateRandom={generateRandom} />\n        <div style={{ margin: \"60px 0px 40px 40px\" }}>\n          {listView ? (\n            <div>\n              <CardList\n                colors={currentCards}\n                selectColor={handleCardClick}\n                currentPage={currentPage}\n              />\n              <Pagination\n                cardsPerPage={cardsPerPage}\n                totalCards={ColorCodes.length}\n                paginate={paginate}\n                currentPage={currentPage}\n              />\n            </div>\n          ) : (\n            <CardDetail\n              clear={handleClear}\n              selectedColor={selectedColor}\n              detailCardClick={handleDetailCardClick}\n              arrColor={arrColor}\n              currentPage={currentPage}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}